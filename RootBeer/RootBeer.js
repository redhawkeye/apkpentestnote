Java.perform(function () {
    let RootBeer = Java.use("com.scottyab.rootbeer.RootBeer");

    RootBeer["isRooted"].implementation = function () {
        console.log(`RootBeer.isRooted is called`);
        let result = this["isRooted"]();
        console.log(`RootBeer.isRooted result=${result}`);
        return false;
    };

    RootBeer["checkForBusyBoxBinary"].implementation = function () {
        console.log(`RootBeer.checkForBusyBoxBinary is called`);
        let result = this["checkForBusyBoxBinary"]();
        console.log(`RootBeer.checkForBusyBoxBinary result=${result}`);
        return false;
    };

    RootBeer["isRootedWithBusyBoxCheck"].implementation = function () {
        console.log(`RootBeer.isRootedWithBusyBoxCheck is called`);
        let result = this["isRootedWithBusyBoxCheck"]();
        console.log(`RootBeer.isRootedWithBusyBoxCheck result=${result}`);
        return false;
    };

    RootBeer["isRootedWithoutBusyBoxCheck"].implementation = function () {
        console.log(`RootBeer.isRootedWithoutBusyBoxCheck is called`);
        let result = this["isRootedWithoutBusyBoxCheck"]();
        console.log(`RootBeer.isRootedWithoutBusyBoxCheck result=${result}`);
        return false;
    };

    RootBeer["checkForDangerousProps"].implementation = function () {
        console.log(`RootBeer.checkForDangerousProps is called`);
        let result = this["checkForDangerousProps"]();
        console.log(`RootBeer.checkForDangerousProps result=${result}`);
        return false;
    };

    RootBeer["checkForNativeLibraryReadAccess"].implementation = function () {
        console.log(`RootBeer.checkForNativeLibraryReadAccess is called`);
        let result = this["checkForNativeLibraryReadAccess"]();
        console.log(`RootBeer.checkForNativeLibraryReadAccess result=${result}`);
        return false;
    };

    RootBeer["checkForRootNative"].implementation = function () {
        console.log(`RootBeer.checkForRootNative is called`);
        let result = this["checkForRootNative"]();
        console.log(`RootBeer.checkForRootNative result=${result}`);
        return false;
    };

    RootBeer["detectTestKeys"].implementation = function () {
        console.log(`RootBeer.detectTestKeys is called`);
        let result = this["detectTestKeys"]();
        console.log(`RootBeer.detectTestKeys result=${result}`);
        return false;
    };

    RootBeer["checkForSuBinary"].implementation = function () {
        console.log(`RootBeer.checkForSuBinary is called`);
        let result = this["checkForSuBinary"]();
        console.log(`RootBeer.checkForSuBinary result=${result}`);
        return false;
    };

    RootBeer["checkSuExists"].implementation = function () {
        console.log(`RootBeer.checkSuExists is called`);
        let result = this["checkSuExists"]();
        console.log(`RootBeer.checkSuExists result=${result}`);
        return false;
    };

    RootBeer["detectRootCloakingApps"].overload("[Ljava.lang.String;").implementation = function(args) {
        console.log(`RootBeer.detectRootCloakingApps is called`);
        let result = this["detectRootCloakingApps"]();
        console.log(`RootBeer.detectRootCloakingApps result=${result}`);
        return result;
    };

    RootBeer["detectPotentiallyDangerousApps"].overload("[Ljava.lang.String;").implementation = function(args) {
        console.log(`RootBeer.detectPotentiallyDangerousApps is called`);
        let result = this["detectPotentiallyDangerousApps"]();
        console.log(`RootBeer.detectPotentiallyDangerousApps result=${result}`);
        return result;
    };

    RootBeer["detectRootManagementApps"].overload("[Ljava.lang.String;").implementation = function(args) {
        console.log(`RootBeer.detectRootManagementApps is called`);
        let result = this["detectRootManagementApps"]();
        console.log(`RootBeer.detectRootManagementApps result=${result}`);
        return result;
    };

    RootBeer["canLoadNativeLibrary"].implementation = function () {
        console.log(`RootBeer.canLoadNativeLibrary is called`);
        let result = this["canLoadNativeLibrary"]();
        console.log(`RootBeer.canLoadNativeLibrary result=${result}`);
        return false;
    };

    RootBeer["checkForRWPaths"].implementation = function () {
        console.log(`RootBeer.checkForRWPaths is called`);
        let result = this["checkForRWPaths"]();
        console.log(`RootBeer.checkForRWPaths result=${result}`);
        return false;
    };

    RootBeer["mountReader"].implementation = function () {
        console.log(`RootBeer.mountReader is called`);
        let result = this["mountReader"]();
        // console.log(`RootBeer.mountReader result=${result}`);
        return null;
    };

    RootBeer["propsReader"].implementation = function () {
        console.log(`RootBeer.propsReader is called`);
        let result = this["propsReader"]();
        // console.log(`RootBeer.propsReader result=${result}`);
        return null;
    };

    RootBeer["checkForMagiskBinary"].implementation = function () {
        console.log(`RootBeer.checkForMagiskBinary is called`);
        let result = this["checkForMagiskBinary"]();
        console.log(`RootBeer.checkForMagiskBinary result=${result}`);
        return false;
    };
});
